# scripts/install_hook.py

import os
import sys
import stat

# Conte√∫do que ser√° escrito no arquivo do hook pre-push
HOOK_CONTENT = """#!/bin/sh
# Hook que executa a ferramenta CodeWise. Gerado por 'codewise-init'.
set -e

echo "--- [HOOK PRE-PUSH CodeWise ATIVADO] ---"
codewise-pr
echo "--- [HOOK PRE-PUSH CodeWise CONCLU√çDO] ---"
exit 0
"""

def main():
    """
    Encontra o diret√≥rio .git/hooks e instala o script pre-push.
    """
    print("üöÄ Iniciando configura√ß√£o do hook pre-push do CodeWise...")

    # O script roda a partir do diret√≥rio raiz do reposit√≥rio do usu√°rio
    repo_root = os.getcwd()
    hooks_dir = os.path.join(repo_root, '.git', 'hooks')

    if not os.path.isdir(hooks_dir):
        print(f"‚ùå Erro: O diret√≥rio de hooks do Git n√£o foi encontrado em '{hooks_dir}'.")
        print("Voc√™ est√° executando este comando a partir da raiz de um reposit√≥rio Git?")
        sys.exit(1)

    pre_push_path = os.path.join(hooks_dir, 'pre-push')

    try:
        with open(pre_push_path, 'w') as f:
            f.write(HOOK_CONTENT)
        print(f"‚úÖ Arquivo de hook criado em: {pre_push_path}")

        # Torna o arquivo execut√°vel (essencial para Linux/macOS e boa pr√°tica no Windows com Git Bash)
        st = os.stat(pre_push_path)
        os.chmod(pre_push_path, st.st_mode | stat.S_IEXEC)
        print("‚úÖ Permiss√£o de execu√ß√£o concedida ao hook.")
        print("\nüéâ Configura√ß√£o conclu√≠da! A automa√ß√£o est√° ativa para este reposit√≥rio.")

    except Exception as e:
        print(f"‚ùå Ocorreu um erro inesperado ao configurar o hook: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()